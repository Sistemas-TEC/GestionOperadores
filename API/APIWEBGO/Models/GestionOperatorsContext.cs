// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace APIWEBGO.Models;

public partial class GestionOperatorsContext : DbContext
{
    public GestionOperatorsContext()
    {
    }

    public GestionOperatorsContext(DbContextOptions<GestionOperatorsContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AdmOperator> AdmOperators { get; set; }

    public virtual DbSet<Classroom> Classrooms { get; set; }

    public virtual DbSet<Equipment> Equipment { get; set; }

    public virtual DbSet<Facility> Facilities { get; set; }

    public virtual DbSet<Laboratory> Laboratories { get; set; }

    public virtual DbSet<Operator> Operators { get; set; }

    public virtual DbSet<SchedulexEquipment> SchedulexEquipments { get; set; }

    public virtual DbSet<SchedulexFacility> SchedulexFacilities { get; set; }

    public virtual DbSet<SchedulexOperator> SchedulexOperators { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=JOSEPABLO-pc;Initial Catalog=GestionOperators;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AdmOperator>(entity =>
        {
            entity.HasKey(e => e.idAdmOperator).HasName("PK__AdmOpera__DF5A81DCBDFDE993");

            entity.ToTable("AdmOperator");

            entity.Property(e => e.cellphone).HasMaxLength(20);
            entity.Property(e => e.email).HasMaxLength(255);
        });

        modelBuilder.Entity<Classroom>(entity =>
        {
            entity.HasKey(e => e.idClassroom).HasName("PK__Classroo__DF3B575D5421688E");

            entity.ToTable("Classroom");

            entity.Property(e => e.idClassroom)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.idFacilitiesNavigation).WithMany(p => p.Classrooms)
                .HasForeignKey(d => d.idFacilities)
                .HasConstraintName("FK__Classroom__idFac__38996AB5");
        });

        modelBuilder.Entity<Equipment>(entity =>
        {
            entity.HasKey(e => e.idEquipment).HasName("PK__Equipmen__F5087F02F8A159E8");

            entity.Property(e => e.condition).HasMaxLength(255);
            entity.Property(e => e.name).HasMaxLength(255);

            entity.HasOne(d => d.idUserNavigation).WithMany(p => p.Equipment)
                .HasForeignKey(d => d.idUser)
                .HasConstraintName("FK__Equipment__idUse__2D27B809");
        });

        modelBuilder.Entity<Facility>(entity =>
        {
            entity.HasKey(e => e.idFacilities).HasName("PK__Facility__32C12FE6B1323813");

            entity.ToTable("Facility");

            entity.HasOne(d => d.idUserNavigation).WithMany(p => p.Facilities)
                .HasForeignKey(d => d.idUser)
                .HasConstraintName("FK__Facility__idUser__32E0915F");
        });

        modelBuilder.Entity<Laboratory>(entity =>
        {
            entity.HasKey(e => e.idLaboratory).HasName("PK__Laborato__CF6A6A1CDBF55523");

            entity.ToTable("Laboratory");

            entity.Property(e => e.idLaboratory)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.idFacilitiesNavigation).WithMany(p => p.Laboratories)
                .HasForeignKey(d => d.idFacilities)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Laborator__idFac__3B75D760");
        });

        modelBuilder.Entity<Operator>(entity =>
        {
            entity.HasKey(e => e.idOperator).HasName("PK__Operator__DDFD09657B7CD520");

            entity.ToTable("Operator");

            entity.Property(e => e.cellphone).HasMaxLength(20);
            entity.Property(e => e.email).HasMaxLength(255);
        });

        modelBuilder.Entity<SchedulexEquipment>(entity =>
        {
            entity.HasKey(e => e.idSchedulexEquipment).HasName("PK__Schedule__C83BB4F0CA6123B2");

            entity.ToTable("SchedulexEquipment");

            entity.Property(e => e.beginningHour).HasPrecision(0);
            entity.Property(e => e.finalDate).HasColumnType("date");
            entity.Property(e => e.finishingHour).HasPrecision(0);
            entity.Property(e => e.initialDate).HasColumnType("date");

            entity.HasOne(d => d.idEquipmentNavigation).WithMany(p => p.SchedulexEquipments)
                .HasForeignKey(d => d.idEquipment)
                .HasConstraintName("FK__Schedulex__idEqu__300424B4");
        });

        modelBuilder.Entity<SchedulexFacility>(entity =>
        {
            entity.HasKey(e => e.idSchedulexFacility).HasName("PK__Schedule__5181FCD56969C143");

            entity.ToTable("SchedulexFacility");

            entity.Property(e => e.beginningHour).HasPrecision(0);
            entity.Property(e => e.date).HasColumnType("date");
            entity.Property(e => e.finishingHour).HasPrecision(0);

            entity.HasOne(d => d.idFacilitiesNavigation).WithMany(p => p.SchedulexFacilities)
                .HasForeignKey(d => d.idFacilities)
                .HasConstraintName("FK__Schedulex__idFac__35BCFE0A");
        });

        modelBuilder.Entity<SchedulexOperator>(entity =>
        {
            entity.HasKey(e => e.idSchedulexOperator).HasName("PK__Schedule__21A3C99073233808");

            entity.ToTable("SchedulexOperator");

            entity.Property(e => e.beginningHour).HasPrecision(0);
            entity.Property(e => e.day).HasColumnType("date");
            entity.Property(e => e.finishingHour).HasPrecision(0);

      
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.idUser).HasName("PK__User__3717C982B1E0E3B8");

            entity.ToTable("User");

            entity.Property(e => e.email).HasMaxLength(255);
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}