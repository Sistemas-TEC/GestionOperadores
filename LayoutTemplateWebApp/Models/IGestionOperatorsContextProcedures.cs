// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using LayoutTemplateWebApp.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace LayoutTemplateWebApp.Models
{
    public partial interface IGestionOperatorsContextProcedures
    {
        Task<int> AssignOperatorSubstitution2Async(DateTime? day, TimeSpan? beginningHour, TimeSpan? finishingHour, int? idOperator, string idFacility, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ChangeEquipmentDescriptionResult>> ChangeEquipmentDescriptionAsync(int? idEquipment, string newDescription, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreateAdmOperatorAsync(int? idAdmOperator, string cellphone, string email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreateClassroomAsync(string idClassroom, int? idFacilities, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreateEquipmentAsync(int? idEquipment, bool? availability, string name, string description, int? idUser, string condition, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreateFacilityAsync(int? idFacilities, int? capacity, int? idUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreateLaboratoryAsync(string idLaboratory, int? idFacilities, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreateOperatorAsync(int? idOperator, string cellphone, string email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreateScheduleXOperatorAsync(DateTime? day, TimeSpan? beginningHour, TimeSpan? finishingHour, int? idOperator, string idFacility, int? quantity, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteAdmOperatorAsync(int? idAdmOperator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteClassroomAsync(string idClassroom, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEquipmentAsync(int? idEquipment, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteFacilityAsync(int? idFacilities, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteLaboratoryAsync(string idLaboratory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteOperatorAsync(int? idOperator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> deleteOperatorByEmailAsync(string email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> FreeFacilityAsync(string idFacilities, TimeSpan? beginningHour, TimeSpan? finishingHour, DateTime? date, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAvailableEquipmentResult>> GetAvailableEquipmentAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetOperatorsForFacilityOnDateResult>> GetOperatorsForFacilityOnDateAsync(DateTime? inputDate, string inputFacilityId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetScheduleForFacilityOnDateResult>> GetScheduleForFacilityOnDateAsync(DateTime? inputDate, string inputFacility, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LendEquipmentAsync(int? idEquipment, TimeSpan? beginningHour, TimeSpan? finishingHour, DateTime? initialDate, DateTime? finalDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LendFacilityAsync(string idFacilities, TimeSpan? beginningHour, TimeSpan? finishingHour, string activityDescription, DateTime? date, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ModificarOperadorAsync(int? idOperador, string nuevoCellphone, string nuevoEmail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<obtenerEquiposPrestadosResult>> obtenerEquiposPrestadosAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadAllAdmOperatorsResult>> ReadAllAdmOperatorsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadAllClassroomsResult>> ReadAllClassroomsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadAllEquipmentResult>> ReadAllEquipmentAsync(int? idEquipment, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadAllFacilitiesResult>> ReadAllFacilitiesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadAllLaboratoriesResult>> ReadAllLaboratoriesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadAllOperatorsResult>> ReadAllOperatorsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadClassroomByIDResult>> ReadClassroomByIDAsync(string idClassroom, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadEquipmentResult>> ReadEquipmentAsync(int? idEquipment, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadFacilityByIDResult>> ReadFacilityByIDAsync(int? idFacilities, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadLaboratoryByIDResult>> ReadLaboratoryByIDAsync(string idLaboratory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReadOperatorResult>> ReadOperatorAsync(int? idOperator, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllFromSchedulexFacilityResult>> SelectAllFromSchedulexFacilityAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_PrestarEquipoAsync(int? idUser, int? idEquipment, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_UpdateEquipmentAvailabilityAsync(int? equipmentID, bool? newAvailability, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateAdmOperatorAsync(int? idAdmOperator, string cellphone, string email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateClassroomAsync(string idClassroom, int? idFacilities, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateEquipmentAsync(int? idEquipment, bool? availability, string name, string description, int? idUser, string condition, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateFacilityAsync(int? idFacilities, int? capacity, int? idUser, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateLaboratoryAsync(string idLaboratory, int? idFacilities, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> updateOperatorAsync(int? idOperator, string newCellphone, string newEmail, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
